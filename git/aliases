[alias]
  freebase = pull --rebase
  ld = log --decorate
#  lg = log -p --decorate
  lw = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset%n' --abbrev-commit --date=relative
  lwa = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset%n' --abbrev-commit --date=relative --all
  lwat = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr -> %cd) %C(yellow)<%an>%Creset%n' --abbrev-commit --all
  lwn = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset%n' --abbrev-commit --date=relative --name-status
  lwna = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset%n' --abbrev-commit --date=relative --name-status --all
  lo = log --pretty=oneline --abbrev-commit
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  loln = log --graph --decorate --pretty=oneline --abbrev-commit --name-status
  lolnd = log --graph --decorate --pretty=oneline --abbrev-commit --name-only --diff-filter=D
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lolan = log --graph --decorate --pretty=oneline --abbrev-commit --all --name-status
  thisbranch = name-rev --name-only HEAD
  mr = merge --no-ff
  sup = submodule update --init
  sst = submodule status
  newbranch = !sh -c 'BRANCH_NAME=$0 && git checkout -b $BRANCH_NAME && git push --set-upstream origin $BRANCH_NAME'
  deletebranch = !sh -c 'BRANCH_NAME=$0 && git checkout master && git branch -d $BRANCH_NAME && git push origin --delete $BRANCH_NAME'
  ls = ls-files



  lg = log --graph --pretty=format:'%Cred%h%C(yellow)%d %Cgreen%cr %Cblue%an%Creset %s' --date=relative --all
  last = log --format=medium --date=iso -3 HEAD
  st = status -sb --ahead-behind --renames
  di = diff --minimal -U0 -p --no-prefix --color-words
  root = rev-parse --show-toplevel
  rela = rev-parse --show-prefix
  clear = !git checkout master && git reset --hard origin/master && git clean -fdi
  # 'git n ...' to disable pager
  n = !git --no-pager

  up = push --set-upstream origin HEAD
  p = push
  ll = !git pull && git sup

  a = add
  aa = add --all
  au = add --update

  # Note: "git add --all" and "git commit --all" are different commit does not care about working dir and commit does not add files so is closer to update
  c = commit
  cu = commit --all
  ca = !git add --all && git commit
  wu = commit --all --message "WIP"
  wa = !git add --all && git commit --message "WIP"

  b = branch
  ba = !git --no-pager branch --all --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  bd = branch --delete
  co = checkout
  cob = checkout -b
  cloner = clone --recursive



